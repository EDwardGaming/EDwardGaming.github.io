<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java语法_面向对象_包</title>
      <link href="/2025/02/18/Java%E8%AF%AD%E6%B3%95-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E5%8C%85/"/>
      <url>/2025/02/18/Java%E8%AF%AD%E6%B3%95-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-Package"><a href="#Java-Package" class="headerlink" title="Java Package"></a>Java Package</h1><h2 id="package-关键字"><a href="#package-关键字" class="headerlink" title="package 关键字"></a>package 关键字</h2><blockquote><p>在 Java 中，<code>package</code>是一个非常重要的概念，用于组织和管理 Java 类。</p></blockquote><h3 id="定义与作用"><a href="#定义与作用" class="headerlink" title="定义与作用"></a>定义与作用</h3><ul><li><p><strong>定义</strong>：</p><ul><li><code>package</code>语句是 Java 源文件中的一个特殊语句，用于<strong>声明该文件中定义的类所属的包</strong>。</li><li><strong>它必须是源文件中的第一条非注释语句</strong>。</li></ul></li><li><p>作用</p><ul><li><p><strong>组织代码结构</strong>：将相关的类、接口等组织在一起，形成一种层次化的命名空间，使代码更易于管理和维护。</p><p>比如，所有与数据库操作相关的类可以放在一个名为<code>com.example.db</code>的包中。</p></li></ul><ul><li><p><strong>避免命名冲突</strong>：不同的包中可以有<strong>相同名称的类</strong>，通过包名来<strong>区分它们</strong>。</p><p>例如，<code>java.util</code>包和<code>java.sql</code>包中都有<code>Date</code>类，通过完整的包名来明确使用的是哪个类。</p></li></ul></li></ul><h3 id="声明与命名规则"><a href="#声明与命名规则" class="headerlink" title="声明与命名规则"></a>声明与命名规则</h3><ul><li><p><strong>声明语法</strong>：</p><p>在 Java 源文件的开头使用<code>package</code>关键字来声明包，例如<code>package com.example.myapp;</code>，表示该文件中的类都属于<code>com.example.myapp</code>包。</p></li><li><p>命名规则：</p><ul><li><strong>全小写</strong>：包名通常采用全小写字母，以提高可读性和遵循 Java 的命名规范。</li><li><strong>域名倒置</strong>：一般以公司或组织的域名倒置作为包名的开头，然后根据项目的结构和功能进行细分。例如，域名为<code>example.com</code>，那么包名可能是<code>com.example.projectname.module</code>。</li><li><strong>避免使用关键字</strong>：不能使用 Java 中的关键字作为包名，如<code>class</code>、<code>public</code>等。</li></ul></li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ol><li><p>创建一个叫做animals的包。通常使用小写的字母来命名避免与类、接口名字的冲突。在 animals 包中加入一个接口（interface）</p><p><code>Animal.java文件代码</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> animals;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">travel</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>接下来，在同一个包中加入该接口的实现</p><p><code>MammalInt.java文件代码</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> animals;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MammalInt</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal eats&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">travel</span><span class="params">()</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal travels&quot;</span>);</span><br><span class="line">   &#125; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">noOfLegs</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span>&#123;</span><br><span class="line">      <span class="type">MammalInt</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MammalInt</span>();</span><br><span class="line">      m.eat();</span><br><span class="line">      m.travel();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后，编译这两个文件，并把他们放在一个叫做animals的子目录中。 用下面的命令来运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> animals</span><br><span class="line">$ <span class="built_in">cp</span> Animal.class  MammalInt.class animals <span class="comment">#将这两个文件放在animals文件夹，也就是animals包下。</span></span><br><span class="line">$ java animals/MammalInt <span class="comment">#这是在命令行中执行MammalInt类。java是 Java 虚拟机（JVM）的启动命令，用于运行 Java 类。这里指定了animals/MammalInt，表示要运行animals目录下的MammalInt类。</span></span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mammal eats</span><br><span class="line">Mammal travel</span><br></pre></td></tr></table></figure><p>或者在把这两个文件放在 手动新建的<code>animal</code>文件夹 下，然后在IntelliJ IDEA Community Edition 下直接运行<code>MammalInt.java</code>即可，可实现相同功能。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\<span class="number">19707</span>\iCloudDrive\iCloud~<span class="built_in">md</span>~obsidian\Happy\quzia_pac\Java_prac\包&gt; tree /F</span><br><span class="line">卷 OS 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 <span class="number">1511</span><span class="literal">-5760</span></span><br><span class="line">C:.</span><br><span class="line">├─.idea</span><br><span class="line">│      .gitignore</span><br><span class="line">│      misc.xml</span><br><span class="line">│      modules.xml</span><br><span class="line">│      vcs.xml</span><br><span class="line">│      workspace.xml</span><br><span class="line">│      包.iml</span><br><span class="line">│</span><br><span class="line">├─animals</span><br><span class="line">│      Animal.java</span><br><span class="line">│      MammalInt.java</span><br><span class="line">│</span><br><span class="line">└─out</span><br><span class="line">    └─production</span><br><span class="line">        └─包</span><br><span class="line">            ├─.idea</span><br><span class="line">            │      .gitignore</span><br><span class="line">            │      misc.xml</span><br><span class="line">            │      modules.xml</span><br><span class="line">            │      vcs.xml</span><br><span class="line">            │      包.iml</span><br><span class="line">            │</span><br><span class="line">            └─animals</span><br><span class="line">                    Animal.class</span><br><span class="line">                    MammalInt.class</span><br></pre></td></tr></table></figure></li></ol><p>上述代码中，<code>MammalInt</code>类实现了<code>Animal</code>接口，并实现了<code>eat</code>和<code>travel</code>方法，在方法中分别打印出了<code>Mammal eats</code>和<code>Mammal travels</code>。</p><h2 id="package-的目录结构设置"><a href="#package-的目录结构设置" class="headerlink" title="package 的目录结构设置"></a>package 的目录结构设置</h2><p>首先，在.java的文件中，如果想要使用<code>package &lt;name&gt;</code>语句，那么必须将该文件放到 <code>./&lt;name&gt;</code> 文件夹 (项目根目录的name文件夹) 下。 </p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>通常，一个公司使用它互联网域名的颠倒形式来作为它的包名.例如：互联网域名是 Mihoyo.com，所有的包名都以 com.Mihoyo 开头。包名中的每一个部分对应一个子目录。</p><p>例如：有一个 <strong>com.Mihoyo.test</strong> 的包，这个包包含一个叫做 Mihoyo.java 的源文件，那么相应的，应该有如下面的一连串子目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">....\com\Mihoyo\test\Mihoyo.java</span><br></pre></td></tr></table></figure><p>那么文件<code>Mihoyo.java</code>如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Mihoyo.test;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Mihoyo</span> &#123;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Google</span> &#123;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果使用<code>javac -d . Mihoyo.java</code>编译文件，就会产生如下字节码文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.\com\Mihoyo\test\Mihoyo.class</span><br><span class="line">.\com\Mihoyo\test\Google.class</span><br></pre></td></tr></table></figure><p>编译之后的 .class 文件应该和 .java 源文件一样，它们放置的目录应该跟包的名字对应起来。</p><p>但是，并不要求 .class 文件的路径跟相应的 .java 的路径一样。你可以分开来安排源码和类的目录。比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;path-one&gt;\sources\com\Mihoyo\test\Mihoyo.java</span><br><span class="line">&lt;path-two&gt;\classes\com\Mihoyo\test\Google.class</span><br></pre></td></tr></table></figure><p>这样，你可以将你的类目录分享给其他的编程人员，而不用透露自己的源码。</p><h3 id="字节码文件的加载路径"><a href="#字节码文件的加载路径" class="headerlink" title="字节码文件的加载路径"></a>字节码文件的加载路径</h3><p>用这种方法管理源码和类文件可以让编译器和java 虚拟机（JVM）可以找到你程序中使用的所有类型：</p><ul><li>类目录的绝对路径叫做 <code>class path</code>。设置在系统变量 <code>CLASSPATH</code> 中。也可以在执行时使用<code>java -classpath &lt;class path&gt;</code>来指定或者直接更改<code>CLASSPATH</code>。（更改方法在下一个示例中）</li><li>编译器和 java 虚拟机通过将 <code>&lt;package name&gt; + &lt;class path&gt;</code> 来构造 .class 文件的路径。</li></ul><p>比如在上一个示例中：</p><ul><li><code>&lt;path- two&gt;\classes</code> 是 <code>class path</code></li><li><code>&lt;package name&gt;</code>是 <code>com.Mihoyo.test</code></li><li>所以最终 编译器和 JVM 会在 <code>&lt;path-two&gt;\classes\com\Mihoyo\test</code> 中找编译好的 .class 文件。</li></ul><p>一个 class path 可能会包含好几个路径，多路径应该用分隔符(<code>;</code>)分开。</p><p>默认情况下，编译器和 JVM 查找 <strong>当前目录</strong>。JAR 文件按包含 Java 平台相关的类，所以他们的目录默认放在了 <code>class path</code> 中。</p><p>默认的CLASSPATH如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClassPath=.;C:\Program Files\Java\jdk<span class="literal">-17</span>\lib\dt.jar;C:\Program Files\Java\jdk<span class="literal">-17</span>\lib\tools.jar;C:\Program Files\Java\jdk<span class="literal">-17</span>\lib;</span><br></pre></td></tr></table></figure><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><p>使用集成开发环境IDE <code>IntelliJ IDEA Community Edition</code>运行java文件时，包以及java文件编译后，默认存放在.&#x2F;out&#x2F;production&#x2F;&lt;根目录名称&gt;下，比如：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\<span class="number">19707</span>\iCloudDrive\iCloud~<span class="built_in">md</span>~obsidian\Happy\quzia_pac\Java_prac\包&gt; tree /F</span><br><span class="line">卷 OS 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 <span class="number">1511</span><span class="literal">-5760</span></span><br><span class="line">C:.</span><br><span class="line">│  _Import.java</span><br><span class="line">│</span><br><span class="line">├─.idea</span><br><span class="line">│      .gitignore</span><br><span class="line">│      misc.xml</span><br><span class="line">│      modules.xml</span><br><span class="line">│      vcs.xml</span><br><span class="line">│      workspace.xml</span><br><span class="line">│      包.iml</span><br><span class="line">│</span><br><span class="line">├─animals</span><br><span class="line">│      Animal.java</span><br><span class="line">│      MammalInt.java</span><br><span class="line">│</span><br><span class="line">└─out</span><br><span class="line">    └─production</span><br><span class="line">        └─包</span><br><span class="line">            │  _Import.class</span><br><span class="line">            │</span><br><span class="line">            ├─.idea</span><br><span class="line">            │      .gitignore</span><br><span class="line">            │      misc.xml</span><br><span class="line">            │      modules.xml</span><br><span class="line">            │      vcs.xml</span><br><span class="line">            │      workspace.xml</span><br><span class="line">            │      包.iml</span><br><span class="line">            │</span><br><span class="line">            └─animals</span><br><span class="line">                    Animal.class</span><br><span class="line">                    MammalInt.class <span class="comment">#编译好的可被JVM加载执行的字节码文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是如果想要在另一个文件夹下使用这个包，有两种方法：</p><h4 id="本地库的使用方法"><a href="#本地库的使用方法" class="headerlink" title="本地库的使用方法"></a>本地库的使用方法</h4><p><strong>方法一：命令行执行指定包路径</strong></p><p>命令行执行，指定包路径<code>C:\Users\19707\iCloudDrive\iCloud~md~obsidian\Happy\quzia_pac\Java_prac\包</code>即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\19707\iCloudDrive\iCloud~md~obsidian\Happy\quzia_pac\Java_prac\本地库和外部库&gt; java -classpath C:\Users\19707\iCloudDrive\iCloud~md~obsidian\Happy\quzia_pac\Java_prac\包\out\production\包 .\OutLib.java</span><br><span class="line">Mammal eats</span><br><span class="line">Mammal travels</span><br></pre></td></tr></table></figure><p><strong>方法二：更改变量CLASSPATH</strong></p><p> <strong>在 CMD 中追加 <code>CLASSPATH</code></strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\19707&gt;<span class="title">set</span> <span class="title">CLASSPATH</span></span></span><br><span class="line"><span class="function"><span class="title">ClassPath</span>=.;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">dt.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">tools.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\19707&gt;<span class="title">set</span> <span class="title">CLASSPATH</span>=%<span class="title">CLASSPATH</span>%;<span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\包\<span class="title">out</span>\<span class="title">production</span>\包</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\19707&gt;<span class="title">set</span> <span class="title">CLASSPATH</span></span></span><br><span class="line"><span class="function"><span class="title">ClassPath</span>=.;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">dt.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">tools.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>;;<span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\包\<span class="title">out</span>\<span class="title">production</span>\包</span></span><br></pre></td></tr></table></figure><p>上述命令中，<code>%CLASSPATH%</code> 会获取当前 <code>CLASSPATH</code> 的值，然后通过分号 <code>;</code> 将新的路径追加到后面。</p><p><strong>或在 PowerShell 中追加 <code>CLASSPATH</code></strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:CLASSPATH</span> = <span class="string">&quot;<span class="variable">$env:CLASSPATH</span>;C:\Users\19707\iCloudDrive\iCloud~md~obsidian\Happy\quzia_pac\Java_prac\包\out\production\包&quot;</span></span><br></pre></td></tr></table></figure><p>这里，<code>$env:CLASSPATH</code> 表示当前 <code>CLASSPATH</code> 的值，通过字符串拼接的方式将新的路径追加到后面。</p><p>效果如下：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\本地库和外部库&gt;<span class="title">tree</span> /<span class="title">f</span> </span></span><br><span class="line"><span class="function">卷 <span class="title">OS</span> 的文件夹 <span class="title">PATH</span> 列表</span></span><br><span class="line"><span class="function">卷序列号为 1511-5760</span></span><br><span class="line"><span class="function"><span class="title">C</span>:.</span></span><br><span class="line"><span class="function">│  <span class="title">OutLib.java</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\本地库和外部库&gt;<span class="title">set</span> <span class="title">CLASSPATH</span>=%<span class="title">CLASSPATH</span>%;<span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\包\<span class="title">out</span>\<span class="title">production</span>\包                </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\本地库和外部库&gt;<span class="title">set</span> <span class="title">CLASSPATH</span>                                              </span></span><br><span class="line"><span class="function"><span class="title">ClassPath</span>=.;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">dt.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>\<span class="title">tools.jar</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">Java</span>\<span class="title">jdk</span>-17\<span class="title">lib</span>;;<span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\包\<span class="title">out</span>\<span class="title">production</span>\包</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\19707\<span class="title">iCloudDrive</span>\<span class="title">iCloud</span>~<span class="title">md</span>~<span class="title">obsidian</span>\<span class="title">Happy</span>\<span class="title">quzia_pac</span>\<span class="title">Java_prac</span>\本地库和外部库&gt;<span class="title">java</span> <span class="title">OutLib.java</span></span></span><br><span class="line"><span class="function"><span class="title">Mammal</span> <span class="title">eats</span></span></span><br><span class="line"><span class="function"><span class="title">Mammal</span> <span class="title">travels</span></span></span><br></pre></td></tr></table></figure><h2 id="import-关键字"><a href="#import-关键字" class="headerlink" title="import 关键字"></a>import 关键字</h2><h3 id="Java包的导入与使用"><a href="#Java包的导入与使用" class="headerlink" title="Java包的导入与使用"></a>Java包的导入与使用</h3><ul><li><strong>导入其他包中的类</strong>：<ul><li>使用<code>import</code>语句<strong>导入其他包中的类</strong>，以便在当前类中可以直接使用这些类，而无需使用完整的包名</li><li>例如，要使用<code>java.util.Date</code>类，可以在代码中添加<code>import java.util.Date;</code>，然后就可以直接使用<code>Date</code>来创建对象等操作。</li><li>import 语句应该位于 package 语句之后</li></ul></li><li><strong>使用不同包中的同名类</strong>：<ul><li>当需要使用不同包中的同名类时，可以使用完整的包名来明确指定要使用的类。</li><li>例如，<code>java.util.Date</code>和<code>java.sql.Date</code>是两个不同的<code>Date</code>类，如果在代码中同时需要使用这两个类，可以通过完整的包名来区分它们。</li></ul></li></ul><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p>在项目下创建文件<code>_Import.java</code>如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> animals.MammalInt; <span class="comment">//使用包中的类，该类是公共的，本文件对它有访问权限。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">_Import</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args [])</span>&#123;</span><br><span class="line">        <span class="type">MammalInt</span> <span class="variable">m</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MammalInt</span>();</span><br><span class="line">        m.eat();</span><br><span class="line">        m.travel();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行后也输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mammal eats</span><br><span class="line">Mammal travels</span><br></pre></td></tr></table></figure><h3 id="包与访问控制"><a href="#包与访问控制" class="headerlink" title="包与访问控制"></a>包与访问控制</h3><ul><li>访问修饰符与包的关系：Java 中的访问修饰符（public、private、protected和默认（没有修饰符））用于控制类、方法和变量在不同包中的访问权限。<ul><li><strong><code>public</code></strong>：被<code>public</code>修饰的 <em>类、方法或变量</em> 可以在 <strong>任何包中的任何类</strong> 中被访问。</li><li><strong><code>private</code></strong>：<code>private</code>修饰的成员只能在 <strong>当前类内部</strong> 被访问，即使在<strong>同一个包中的其他类也无法访问</strong>。</li><li><strong><code>protected</code></strong>：<code>protected</code>修饰的成员可以在 <strong>当前类、同一个包中的其他类以及不同包中的子类</strong> 中被访问。</li><li><strong>默认（没有修饰符）</strong>：没有修饰符的成员具有包访问权限，即<strong>只能在同一个包中的类</strong>中被访问。</li></ul></li></ul><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> Package </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭载过程</title>
      <link href="/2025/02/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E8%BD%BD%E8%BF%87%E7%A8%8B/"/>
      <url>/2025/02/10/%E5%8D%9A%E5%AE%A2%E6%90%AD%E8%BD%BD%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭载过程"><a href="#博客搭载过程" class="headerlink" title="博客搭载过程"></a>博客搭载过程</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol><li>git</li><li><a href="https://blog.csdn.net/Nicolecocol/article/details/136788200">node.js</a></li><li>Hexo</li></ol><h2 id="解决报错"><a href="#解决报错" class="headerlink" title="解决报错"></a>解决报错</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm : 无法加载文件 D:\Program Files\nodejs\npm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsof</span><br><span class="line">t.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:1 字符: 1</span><br><span class="line">+ npm</span><br><span class="line">+ ~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure><p>Windows PowerShell 默认禁止运行脚本。以下是解决方法：</p><hr><h3 id="临时允许脚本运行（推荐）"><a href="#临时允许脚本运行（推荐）" class="headerlink" title="临时允许脚本运行（推荐）"></a>临时允许脚本运行（推荐）</h3><ol><li><p>以管理员身份打开 PowerShell</p></li><li><p>输入以下命令：</p><p>powershell</p><p>复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned -Scope Process</span><br></pre></td></tr></table></figure><ul><li>这会临时允许当前会话运行脚本</li><li>关闭 PowerShell 后权限恢复默认</li></ul></li></ol><h2 id="Hexo命令教学-deepseek生成"><a href="#Hexo命令教学-deepseek生成" class="headerlink" title="Hexo命令教学(deepseek生成)"></a>Hexo命令教学(deepseek生成)</h2><p>以下是 Hexo 的常用命令及其功能说明，帮助你更高效地管理和发布博客内容：</p><hr><h3 id="一、初始化与安装"><a href="#一、初始化与安装" class="headerlink" title="一、初始化与安装"></a>一、初始化与安装</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo init &lt;folder&gt;</code></td><td>初始化一个 Hexo 项目到指定文件夹</td></tr><tr><td><code>npm install</code></td><td>安装 Hexo 项目依赖</td></tr><tr><td><code>npm install hexo-cli -g</code></td><td>全局安装 Hexo 命令行工具</td></tr></tbody></table><hr><h3 id="二、本地开发"><a href="#二、本地开发" class="headerlink" title="二、本地开发"></a>二、本地开发</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo clean</code></td><td>清除缓存文件和已生成的静态文件</td></tr><tr><td><code>hexo generate</code> 或 <code>hexo g</code></td><td>生成静态文件（默认输出到 <code>public</code> 文件夹）</td></tr><tr><td><code>hexo server</code> 或 <code>hexo s</code></td><td>启动本地服务器（默认地址：<code>http://localhost:4000</code>）</td></tr><tr><td><code>hexo s --debug</code></td><td>启动本地服务器并开启调试模式</td></tr><tr><td><code>hexo g --watch</code></td><td>生成静态文件并监听文件变化</td></tr></tbody></table><hr><h3 id="三、内容管理"><a href="#三、内容管理" class="headerlink" title="三、内容管理"></a>三、内容管理</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo new &lt;title&gt;</code> 或 <code>hexo n &lt;title&gt;</code></td><td>创建一篇新文章（默认路径：<code>source/_posts/</code>）</td></tr><tr><td><code>hexo new page &lt;pageName&gt;</code></td><td>创建一个新页面（默认路径：<code>source/&lt;pageName&gt;/index.md</code>）</td></tr><tr><td><code>hexo publish &lt;filename&gt;</code></td><td>发布草稿为正式文章</td></tr></tbody></table><hr><h3 id="四、部署与发布"><a href="#四、部署与发布" class="headerlink" title="四、部署与发布"></a>四、部署与发布</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo deploy</code> 或 <code>hexo d</code></td><td>部署网站到远程服务器</td></tr><tr><td><code>hexo g -d</code></td><td>生成静态文件并部署</td></tr><tr><td><code>hexo d --generate</code></td><td>部署前自动生成静态文件</td></tr></tbody></table><hr><h3 id="五、插件与主题"><a href="#五、插件与主题" class="headerlink" title="五、插件与主题"></a>五、插件与主题</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>npm install &lt;plugin-name&gt;</code></td><td>安装 Hexo 插件</td></tr><tr><td><code>npm uninstall &lt;plugin-name&gt;</code></td><td>卸载 Hexo 插件</td></tr><tr><td><code>git clone &lt;theme-repo-url&gt; themes/&lt;theme-name&gt;</code></td><td>下载并安装主题</td></tr></tbody></table><hr><h3 id="六、调试与帮助"><a href="#六、调试与帮助" class="headerlink" title="六、调试与帮助"></a>六、调试与帮助</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo version</code> 或 <code>hexo -v</code></td><td>查看 Hexo 版本</td></tr><tr><td><code>hexo help</code></td><td>查看 Hexo 帮助信息</td></tr><tr><td><code>hexo list</code></td><td>列出所有可用命令</td></tr></tbody></table><hr><h3 id="七、常用组合命令"><a href="#七、常用组合命令" class="headerlink" title="七、常用组合命令"></a>七、常用组合命令</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></td><td>清除缓存、生成静态文件并启动本地服务器</td></tr><tr><td><code>hexo clean &amp;&amp; hexo g -d</code></td><td>清除缓存、生成静态文件并部署</td></tr></tbody></table><hr><h3 id="八、配置文件"><a href="#八、配置文件" class="headerlink" title="八、配置文件"></a>八、配置文件</h3><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td><code>_config.yml</code></td><td>Hexo 主配置文件</td></tr><tr><td><code>_config.&lt;theme-name&gt;.yml</code></td><td>主题配置文件</td></tr><tr><td><code>source/_posts/</code></td><td>文章存放目录</td></tr><tr><td><code>source/_drafts/</code></td><td>草稿存放目录</td></tr></tbody></table><hr><h3 id="九、其他实用命令"><a href="#九、其他实用命令" class="headerlink" title="九、其他实用命令"></a>九、其他实用命令</h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>hexo migrate &lt;type&gt;</code></td><td>从其他博客系统迁移内容</td></tr><tr><td><code>hexo render &lt;file&gt;</code></td><td>渲染指定文件</td></tr><tr><td><code>hexo list &lt;type&gt;</code></td><td>列出指定类型的文件（如文章、页面等）</td></tr></tbody></table><hr><h3 id="十、注意事项"><a href="#十、注意事项" class="headerlink" title="十、注意事项"></a>十、注意事项</h3><ol><li><strong>部署前务必执行 <code>hexo clean</code></strong>：避免缓存导致的问题。</li><li><strong>修改配置后重启服务器</strong>：确保配置生效。</li><li><strong>使用 <code>--debug</code> 参数</strong>：调试时查看详细日志。</li></ol><p>掌握这些命令后，你可以更高效地管理和发布 Hexo 博客内容！</p><h2 id="markdown动态字体"><a href="#markdown动态字体" class="headerlink" title="markdown动态字体"></a>markdown动态字体</h2><p><a href="https://readme-typing-svg.demolab.com/demo/?lines=%E6%88%91%E6%9C%89%E4%BD%A0%E4%BB%AC%E6%88%91%E9%9D%9E%E5%B8%B8%E5%B9%B8%E7%A6%8F">Readme Typing SVG - Demo Site</a></p><p>效果如下：</p><p><a href="https://git.io/typing-svg"><img src="https://readme-typing-svg.demolab.com/?font=Fira+Code&pause=1000&width=435&lines=%E6%88%91%E6%9C%89%E4%BD%A0%E4%BB%AC%E6%88%91%E9%9D%9E%E5%B8%B8%E5%B9%B8%E7%A6%8F" alt="Typing SVG"></a></p><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>很推荐</p><p><a href="https://blog.aqcoder.cn/posts/447d/">Butterfly博客主题搭建系列：基础教程 | 枫叶</a></p><h2 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h2><p>修改_config.butterfly.yml里面的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Loading Animation</span><br><span class="line">preloader:</span><br><span class="line">  enable: true</span><br><span class="line">  # source</span><br><span class="line">  # 1. fullpage-loading</span><br><span class="line">  # 2. pace (progress bar)</span><br><span class="line">  source: 1</span><br><span class="line">  # pace theme (see https://codebyzach.github.io/pace/)</span><br><span class="line">  pace_css_url:</span><br></pre></td></tr></table></figure><p>enable为true即可</p><h2 id="搜索系统"><a href="#搜索系统" class="headerlink" title="搜索系统"></a>搜索系统</h2><p><a href="https://blog.aqcoder.cn/posts/447d/#%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F">Butterfly 博客主题搭建系列：基础教程 | 枫叶</a></p><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><p><a href="https://blog.aqcoder.cn/posts/447d/#%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5">Butterfly 博客主题搭建系列：基础教程 | 枫叶</a></p><h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><p><a href="https://zsyyblog.com/cf6da462.html#%E6%96%B0%E7%89%88%EF%BC%88%E6%8E%A8%E8%8D%90%EF%BC%89">Hexo+Butterfly 增加留言板信封 | 竹山一叶</a>  使用新版哦！</p><h3 id="留言板信封"><a href="#留言板信封" class="headerlink" title="留言板信封"></a>留言板信封</h3><p><a href="https://akilar.top/posts/e2d3c450/">信笺样式留言板 | Akilarの糖果屋</a></p><h2 id="半自动化生成相册"><a href="#半自动化生成相册" class="headerlink" title="半自动化生成相册"></a>半自动化生成相册</h2><p>参考文章：</p><p>基于 <a href="https://blog.imyan.ren/posts/64b2bc9e/">半自动化生成博客相册 | 炎忍的博客</a> 这篇文章，我进行了改进，让脚本更稳定。</p><p>基于 <a href="https://www.fattymonkey.com/post/10066.html">Butterfly主题美化之图集相关 | 繁体猴の客栈</a> 这篇文章，配置相册封面和页面设置。</p><h3 id="目录配置"><a href="#目录配置" class="headerlink" title="目录配置"></a>目录配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\happy-blog\<span class="built_in">source</span>&gt; tree /F</span><br><span class="line">卷 原神 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 0EDC-5FA0</span><br><span class="line">D:.</span><br><span class="line">├─about</span><br><span class="line">│      index.md</span><br><span class="line">│</span><br><span class="line">├─categories</span><br><span class="line">│      index.md</span><br><span class="line">│</span><br><span class="line">├─comments</span><br><span class="line">│      index.md</span><br><span class="line">│</span><br><span class="line">├─gallery <span class="comment">#相册页面</span></span><br><span class="line">│  │  index.md</span><br><span class="line">│  │</span><br><span class="line">│  └─harbin-tourism <span class="comment">#具体的相册项目</span></span><br><span class="line">│      │  g.py <span class="comment"># 自动生成markdown的python文件位置</span></span><br><span class="line">│      │  index.md <span class="comment"># 该页面的index.md</span></span><br><span class="line">│      │</span><br><span class="line">│      └─images <span class="comment">#该项目对应的图片集</span></span><br><span class="line">│              me&amp;flower.jpg</span><br><span class="line">│              me&amp;rabbit.jpg</span><br><span class="line">│              me&amp;snowman.jpg</span><br><span class="line">│              一起购物.jpg</span><br><span class="line">│              中央大街的合照.jpg</span><br><span class="line">│              九转小莫.jpg</span><br><span class="line">│              九转小莫豆腐.jpg</span><br><span class="line">│              九转小莫锅包肉.jpg</span><br><span class="line">│              冰雪大世界合照.jpg</span><br><span class="line">│              婷姐和班长.jpg</span><br><span class="line">│              懒得喷.jpg</span><br><span class="line">│              海底捞给王琳婷过生日.jpg</span><br><span class="line">│              滑雪的合照.jpg</span><br><span class="line">│              狮子康在演奏钢琴.jpg</span><br><span class="line">│              美丽的冰雪大世界.jpg</span><br><span class="line">│              雪棉豆沙.jpg</span><br><span class="line">├─<span class="built_in">link</span></span><br><span class="line">│      index.md</span><br><span class="line">│</span><br><span class="line">├─tags</span><br><span class="line">│      index.md</span><br><span class="line">│</span><br><span class="line">├─_data</span><br><span class="line">│      link.yml</span><br><span class="line">│</span><br><span class="line">└─_posts</span><br><span class="line">        Yolo5第一代识别模型训练过程.md</span><br></pre></td></tr></table></figure><h3 id="g-py"><a href="#g-py" class="headerlink" title="g.py"></a><code>g.py</code></h3><p><strong>功能</strong></p><ul><li>自动向特定相册对应的index.md中追加图片的markdown语句。</li><li>但是还是需要<code>hexo new page &lt;pageName&gt;</code>手动生成特定相册对应的页面。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path = os.path.split(os.path.realpath(__file__))[<span class="number">0</span>] <span class="comment">#D:\Program Files\happy-blog\source\gallery\harbin-tourism\</span></span><br><span class="line">abspath_images = path + <span class="string">&#x27;\\images&#x27;</span> <span class="comment">#图片绝对路径</span></span><br><span class="line">xdpath_images = <span class="string">&#x27;images&#x27;</span> <span class="comment"># 图片相对路径 images</span></span><br><span class="line"></span><br><span class="line">os.chdir(abspath_images) <span class="comment">#harbin-tourism\images</span></span><br><span class="line">ls_file = []</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.scandir():</span><br><span class="line">    <span class="keyword">if</span> file.is_file():</span><br><span class="line">        ls_file.append(file.name)</span><br><span class="line"></span><br><span class="line">md_text = <span class="string">&quot;\n&#123;% gallery %&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> ls_file:</span><br><span class="line">    md_path = <span class="string">&quot;![&quot;</span> + os.path.splitext(image)[<span class="number">0</span>] + <span class="string">&quot;](&quot;</span> + <span class="built_in">str</span>(xdpath_images)+ <span class="string">&quot;\\&quot;</span> + image+ <span class="string">&quot;)&quot;</span></span><br><span class="line">    md_text += md_path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)+<span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">md_text += <span class="string">&quot;&#123;% endgallery %&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">os.chdir(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;index.md&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(md_text)</span><br></pre></td></tr></table></figure><h3 id="自动化生成markdown操作步骤"><a href="#自动化生成markdown操作步骤" class="headerlink" title="自动化生成markdown操作步骤"></a>自动化生成markdown操作步骤</h3><ol><li><code>hexo new page gallery</code>生成gallery页面</li><li><code>hexo new page &lt;具体的相册名称&gt;</code>生成某套相册，然后把它移动到上一步生成的gallery目录下。</li><li>在&lt;具体的相册名称&gt;目录下创建images目录，把需要的图片放进去。把g.py也放在该目录下。</li><li><code>python g.py</code>自动生成markdown。</li></ol><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/assets/image-20250210225448620.png" alt="image-20250210225448620"></p><h2 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mailto:&lt;邮箱地址&gt;</span><br></pre></td></tr></table></figure><p>这相当于一个URL外部链接，点击后可以自动打开用户发送邮箱的软件然后向填写的邮箱地址发送邮箱。</p><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &lt;自我介绍界面&gt;</span><br></pre></td></tr></table></figure><p>我的是默认的<code>hexo new page about</code></p><p>然后填写~source&#x2F;about&#x2F;index.md即可完成自我介绍板块。</p><h2 id="文章发表"><a href="#文章发表" class="headerlink" title="文章发表"></a>文章发表</h2><ol><li><p><code>hexo new &lt;titlee&gt; </code>创建文章</p><p>我的文章如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 你的文章标题</span><br><span class="line">date: 2025-02-04 14:00:00</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> 技术</span><br><span class="line"><span class="bullet">  -</span> 学习</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 编程</span><br><span class="line"><span class="section">comments: true</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line"><span class="section"># 文章的标题</span></span><br><span class="line"></span><br><span class="line">这里是文章的内容。你可以用 Markdown 格式书写你的文章，包括代码块、列表、图片等。</span><br><span class="line"></span><br><span class="line"><span class="section">## 示例代码</span></span><br><span class="line"></span><br><span class="line"><span class="code">```python</span></span><br><span class="line"><span class="code">def hello_world():</span></span><br><span class="line"><span class="code">    print(&quot;Hello, World!&quot;)</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure></li><li><p>三连可本地查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于yolov8m物体检测模型的前端展示项目</title>
      <link href="/2025/02/04/%E5%9F%BA%E4%BA%8Eyolov8m%E7%89%A9%E4%BD%93%E6%A3%80%E6%B5%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E7%AB%AF%E5%B1%95%E7%A4%BA%E9%A1%B9%E7%9B%AE/"/>
      <url>/2025/02/04/%E5%9F%BA%E4%BA%8Eyolov8m%E7%89%A9%E4%BD%93%E6%A3%80%E6%B5%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%89%8D%E7%AB%AF%E5%B1%95%E7%A4%BA%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="基于yolov8m物体检测模型的前端展示项目"><a href="#基于yolov8m物体检测模型的前端展示项目" class="headerlink" title="基于yolov8m物体检测模型的前端展示项目"></a>基于yolov8m物体检测模型的前端展示项目</h1><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><ul><li>基于yolov8m和机器视觉的冰雪检测模型</li><li>选择自动划分数据集为训练集和验证集。</li><li>github地址：<a href="https://github.com/EDwardGaming/Front-end-display-project-based-on-YOLOV8m-object-detection-model">https://github.com/EDwardGaming/Front-end-display-project-based-on-YOLOV8m-object-detection-model</a></li></ul><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip pip install -r .\requirements.txt</span><br></pre></td></tr></table></figure><h2 id="项目目录配置"><a href="#项目目录配置" class="headerlink" title="项目目录配置"></a>项目目录配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\road_snow&gt; tree</span><br><span class="line">卷 原神 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 0EDC-5FA0</span><br><span class="line">D:.</span><br><span class="line">├─.idea</span><br><span class="line">│  └─inspectionProfiles</span><br><span class="line">├─.vscode</span><br><span class="line">├─training_set</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─labels</span><br><span class="line">└─yolov8n</span><br><span class="line">    ├─runs</span><br><span class="line">    │  └─detect</span><br><span class="line">    │      └─train310</span><br><span class="line">    │          └─weights</span><br><span class="line">    ├─static</span><br><span class="line">    │  ├─css</span><br><span class="line">    │  ├─results</span><br><span class="line">    │  └─uploads</span><br><span class="line">    └─templates</span><br></pre></td></tr></table></figure><h2 id="识别对象分类"><a href="#识别对象分类" class="headerlink" title="识别对象分类"></a>识别对象分类</h2><p>训练决定舍弃数据集中背景和干燥这两大类，只选择moist、snow和ice这三类。目的是只为识别冰雪，增强模型识别的针对性。</p><table><thead><tr><th>类型</th><th>危险指数</th></tr></thead><tbody><tr><td>moist</td><td>低度危险</td></tr><tr><td>snow</td><td>中度危险</td></tr><tr><td>ice</td><td>高度危险</td></tr></tbody></table><p>后续想增加<code>water </code>类型,指代更多的水，就是更危险的路面。</p><h2 id="数据集介绍"><a href="#数据集介绍" class="headerlink" title="数据集介绍"></a>数据集介绍</h2><p>在之前的YoloV5n模型的基础上，引入纯态数据集进行训练。纯态数据集里面包含的都是单一类型图片，就是整张图片区域都是moist、snow或ice中的一种。</p><h3 id="数据集目录结构"><a href="#数据集目录结构" class="headerlink" title="数据集目录结构"></a>数据集目录结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PS D:\dataset&gt; tree</span><br><span class="line">卷 原神 的文件夹 PATH 列表</span><br><span class="line">卷序列号为 0EDC-5FA0</span><br><span class="line">D:.</span><br><span class="line">├─my_png <span class="comment">#自己找的一些用于测试的图片</span></span><br><span class="line">├─PNG </span><br><span class="line">│  ├─12.01</span><br><span class="line">│  └─12.02 <span class="comment">#图片和标注图片的json文件</span></span><br><span class="line">├─video <span class="comment">#视频</span></span><br><span class="line">└─纯态 </span><br><span class="line">    ├─labels</span><br><span class="line">    ├─冰</span><br><span class="line">    ├─干燥</span><br><span class="line">    ├─潮湿</span><br><span class="line">    ├─积水</span><br><span class="line">    └─雪</span><br></pre></td></tr></table></figure><h3 id="yolov8m-yaml配置"><a href="#yolov8m-yaml配置" class="headerlink" title="yolov8m.yaml配置"></a><code>yolov8m.yaml</code>配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">train:</span> <span class="string">D:\Program</span> <span class="string">Files\road_snow\images\train</span></span><br><span class="line"><span class="attr">val:</span> <span class="string">D:\Program</span> <span class="string">Files\road_snow\images\val</span></span><br><span class="line"><span class="attr">test:</span> <span class="string">D:\Program</span> <span class="string">Files\road_snow\images\test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动划分比例（训练集:验证集）</span></span><br><span class="line"><span class="attr">split:</span> [<span class="number">0.8</span>, <span class="number">0.2</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">nc:</span> <span class="number">3</span>  <span class="comment"># 类别数量</span></span><br><span class="line"><span class="attr">names:</span> [<span class="string">&#x27;water&#x27;</span>,<span class="string">&#x27;snow&#x27;</span>,<span class="string">&#x27;ice&#x27;</span>]  <span class="comment"># 替换为你的类别名称</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据集标注"><a href="#数据集标注" class="headerlink" title="数据集标注"></a>数据集标注</h2><h3 id="标注纯态数据集"><a href="#标注纯态数据集" class="headerlink" title="标注纯态数据集"></a>标注纯态数据集</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><ul><li><p>需要为Yolo机器学习标注数据集，有以下数据集：moist 、snow和ice三种。需要实现数据集标注。返回图片对应的yolo的.txt标注文件。</p></li><li><p>现在有一些纯态图片，就是整张图片区域都是moist、snow或ice中的一种。</p></li><li><p>标注方法的话，纯态代表整张图片，所以对应的<code>label.txt</code>就是 <code>&lt;class_id&gt; 0.5 0.5 1.0 1.0</code></p></li><li><p>再把标注过的图片移动到训练集下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├─training_set</span><br><span class="line">   ├─images</span><br><span class="line">   └─labels</span><br></pre></td></tr></table></figure></li></ul><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该脚本实现划分未标注的纯态数据集为训练集目录的功能</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义类别和 class_id</span></span><br><span class="line">categories = &#123;</span><br><span class="line">    <span class="string">&quot;冰&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;积水&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;潮湿&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;雪&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原始数据目录</span></span><br><span class="line">base_dirs = &#123;</span><br><span class="line">    <span class="string">&quot;冰&quot;</span>: <span class="string">r&quot;D:\Program Files\数据集\纯态\冰&quot;</span>,</span><br><span class="line">    <span class="string">&quot;积水&quot;</span>: <span class="string">r&quot;D:\Program Files\数据集\纯态\积水&quot;</span>,</span><br><span class="line">    <span class="string">&quot;潮湿&quot;</span>: <span class="string">r&quot;D:\Program Files\数据集\纯态\潮湿&quot;</span>,</span><br><span class="line">    <span class="string">&quot;雪&quot;</span>: <span class="string">r&quot;D:\Program Files\数据集\纯态\雪&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标存放路径</span></span><br><span class="line">dataset_dir = <span class="string">r&quot;D:\Program Files\road_snow\training_set&quot;</span> <span class="comment">#数据集绝对路径</span></span><br><span class="line">img_dir = os.path.join(dataset_dir, <span class="string">&quot;images&quot;</span>)</span><br><span class="line">label_dir = os.path.join(dataset_dir, <span class="string">&quot;labels&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> [img_dir, label_dir]:</span><br><span class="line">    os.makedirs(path, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有类别的图片</span></span><br><span class="line"><span class="keyword">for</span> category, dir_path <span class="keyword">in</span> base_dirs.items():</span><br><span class="line">    class_id = categories[category]</span><br><span class="line">    all_images = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(dir_path) <span class="keyword">if</span> f.endswith((<span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpeg&#x27;</span>, <span class="string">&#x27;.JPG&#x27;</span>, <span class="string">&#x27;.PNG&#x27;</span>, <span class="string">&#x27;.JPEG&#x27;</span>))]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理训练集</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> all_images:</span><br><span class="line">        src_img_path = os.path.join(dir_path, filename)</span><br><span class="line">        dst_img_path = os.path.join(img_dir, filename)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 复制图片</span></span><br><span class="line">        shutil.copy(src_img_path, dst_img_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 生成标签</span></span><br><span class="line">        label_filename = os.path.splitext(filename)[<span class="number">0</span>] + <span class="string">&quot;.txt&quot;</span></span><br><span class="line">        label_path = os.path.join(label_dir, label_filename)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(label_path, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="string">f&quot;<span class="subst">&#123;class_id&#125;</span> 0.5 0.5 1.0 1.0\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;纯态数据集划分完成！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="标注普通数据集"><a href="#标注普通数据集" class="headerlink" title="标注普通数据集"></a>标注普通数据集</h3><h4 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h4><ul><li><p>是图片文件和它对应的json标注文件，需要把这些.json标注转为.txt。之后在分别复制到训练集下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Program Files\数据集\PNG\12.02&gt; <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    目录: D:\Program Files\数据集\PNG\12.02</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----         2025/1/20     17:42        8872155 IMG_0721.json</span><br><span class="line">-a----         2025/1/20     17:44        6337944 IMG_0721.PNG</span><br><span class="line">-a----         2025/1/20     17:49        8872155 IMG_0722.json</span><br><span class="line">-a----         2025/1/20     17:48        6392482 IMG_0722.PNG</span><br><span class="line">-a----         2025/1/20     17:51        8872155 IMG_0723.json</span><br><span class="line">-a----         2025/1/20     17:46        6293090 IMG_0723.PNG</span><br><span class="line">-a----         2025/1/20     17:56        8872155 IMG_0724.json</span><br><span class="line">......(省略)</span><br></pre></td></tr></table></figure></li></ul><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该脚本实现划分 将以.json格式标注过的数据集转成.txt格式 并将这些文件构建成训练目录</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置路径</span></span><br><span class="line">image_dir = <span class="string">r&quot;D:\数据集\PNG\12.02&quot;</span>  <span class="comment"># 原始图片目录</span></span><br><span class="line">label_output_dir = <span class="string">r&quot;D:\Program Files\road_snow\training_set\labels&quot;</span></span><br><span class="line">image_output_dir = <span class="string">r&quot;D:\Program Files\road_snow\training_set\images&quot;</span></span><br><span class="line">os.makedirs(label_output_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">os.makedirs(image_output_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">suffix_file = [<span class="string">&quot;.PNG&quot;</span>,<span class="string">&quot;.JPG&quot;</span>,<span class="string">&quot;.JPEG&quot;</span>,<span class="string">&quot;.jpg&quot;</span>,<span class="string">&quot;.png&quot;</span>,<span class="string">&quot;.jpeg&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义类别</span></span><br><span class="line">classes = [<span class="string">&#x27;water&#x27;</span>, <span class="string">&#x27;snow&#x27;</span>, <span class="string">&#x27;ice&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析 JSON 并转换为 YOLO 格式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_to_yolo</span>(<span class="params">json_file, img_width, img_height</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(json_file, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line">    </span><br><span class="line">    yolo_labels = []</span><br><span class="line">    <span class="keyword">for</span> shape <span class="keyword">in</span> data[<span class="string">&#x27;shapes&#x27;</span>]:</span><br><span class="line">        <span class="keyword">if</span> shape[<span class="string">&#x27;shape_type&#x27;</span>] == <span class="string">&#x27;polygon&#x27;</span>:</span><br><span class="line">            label = shape[<span class="string">&#x27;label&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> label <span class="keyword">not</span> <span class="keyword">in</span> classes:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            class_id = classes.index(label)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 计算多边形的外接矩形</span></span><br><span class="line">            points = shape[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">            x_coords = [p[<span class="number">0</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points]</span><br><span class="line">            y_coords = [p[<span class="number">1</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points]</span><br><span class="line">            x_min, x_max = <span class="built_in">min</span>(x_coords), <span class="built_in">max</span>(x_coords)</span><br><span class="line">            y_min, y_max = <span class="built_in">min</span>(y_coords), <span class="built_in">max</span>(y_coords)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 转换为 YOLO 格式</span></span><br><span class="line">            x_center = (x_min + x_max) / <span class="number">2</span> / img_width</span><br><span class="line">            y_center = (y_min + y_max) / <span class="number">2</span> / img_height</span><br><span class="line">            width = (x_max - x_min) / img_width</span><br><span class="line">            height = (y_max - y_min) / img_height</span><br><span class="line">            yolo_labels.append(<span class="string">f&quot;<span class="subst">&#123;class_id&#125;</span> <span class="subst">&#123;x_center&#125;</span> <span class="subst">&#123;y_center&#125;</span> <span class="subst">&#123;width&#125;</span> <span class="subst">&#123;height&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> yolo_labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片和标签</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_data</span>(<span class="params">img_file, labels</span>):</span><br><span class="line">    base_name = os.path.basename(img_file).replace(<span class="string">&quot;.PNG&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;.JPG&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;.JPEG&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;.png&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> suffix_file:</span><br><span class="line">        <span class="keyword">if</span> os.path.basename(img_file).endswith(i):</span><br><span class="line">            img_output_path = os.path.join(image_output_dir, <span class="string">f&quot;<span class="subst">&#123;base_name&#125;</span><span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    label_output_path = os.path.join(label_output_dir, <span class="string">f&quot;<span class="subst">&#123;base_name&#125;</span>.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(label_output_path, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">&quot;\n&quot;</span>.join(labels))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 复制图片</span></span><br><span class="line">    shutil.copy(img_file, img_output_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取所有图片文件</span></span><br><span class="line">image_paths = []</span><br><span class="line"><span class="keyword">for</span> img_file <span class="keyword">in</span> os.listdir(image_dir):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> suffix_file:</span><br><span class="line">        <span class="keyword">if</span> img_file.endswith(i):</span><br><span class="line">            json_file = os.path.join(image_dir, img_file.replace(<span class="string">&quot;.PNG&quot;</span>, <span class="string">&quot;.json&quot;</span>).replace(<span class="string">&quot;.JPG&quot;</span>, <span class="string">&quot;.json&quot;</span>).replace(<span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.json&quot;</span>).replace(<span class="string">&quot;.JPEG&quot;</span>, <span class="string">&quot;.json&quot;</span>).replace(<span class="string">&quot;.png&quot;</span>, <span class="string">&quot;.json&quot;</span>).replace(<span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.json&quot;</span>))</span><br><span class="line">            <span class="keyword">if</span> os.path.exists(json_file):<span class="comment">#如果存在对应的json则操作</span></span><br><span class="line">                <span class="comment"># 假设图片分辨率为 2400x1600，可以根据实际情况调整</span></span><br><span class="line">                img_width, img_height = <span class="number">2400</span>, <span class="number">1600</span></span><br><span class="line">                labels = convert_to_yolo(json_file, img_width, img_height)</span><br><span class="line">                save_data(os.path.join(image_dir, img_file), labels)</span><br><span class="line">                image_paths.append(os.path.join(image_output_dir, img_file))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># 手动划分训练集和验证集</span></span><br><span class="line"><span class="string">random.shuffle(image_paths)</span></span><br><span class="line"><span class="string">split_idx = int(len(image_paths) * 0.8)</span></span><br><span class="line"><span class="string">train_imgs, val_imgs = image_paths[:split_idx], image_paths[split_idx:]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 创建训练集和验证集目录</span></span><br><span class="line"><span class="string">train_dir = os.path.join(image_output_dir, &quot;train&quot;)</span></span><br><span class="line"><span class="string">val_dir = os.path.join(image_output_dir, &quot;val&quot;)</span></span><br><span class="line"><span class="string">os.makedirs(train_dir, exist_ok=True)</span></span><br><span class="line"><span class="string">os.makedirs(val_dir, exist_ok=True)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 移动文件</span></span><br><span class="line"><span class="string">for img_file in train_imgs:</span></span><br><span class="line"><span class="string">    shutil.move(img_file, os.path.join(train_dir, os.path.basename(img_file)))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for img_file in val_imgs:</span></span><br><span class="line"><span class="string">    shutil.move(img_file, os.path.join(val_dir, os.path.basename(img_file)))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数据集划分完成！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h2><p>创建训练目录<code>yolov8m</code>，在该目录下创建<code>train.py</code>文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> ultralytics <span class="keyword">import</span> YOLO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载预训练的 YOLOv8 模型</span></span><br><span class="line">model = YOLO(<span class="string">r&quot;D:\Program Files\road_snow\yolov8n\yolov8m.pt&quot;</span>)  <span class="comment"># 这里可以根据你的需求替换为其他版本的 YOLO 模型</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置训练参数</span></span><br><span class="line">train_args = &#123;</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span>: <span class="string">&#x27;yolov8m.yaml&#x27;</span>,  <span class="comment"># 数据集配置文件路径</span></span><br><span class="line">    <span class="string">&#x27;epochs&#x27;</span>: <span class="number">300</span>,  <span class="comment"># 训练的轮数</span></span><br><span class="line">    <span class="string">&#x27;batch&#x27;</span>: <span class="number">16</span>,  <span class="comment"># 每个批次的大小</span></span><br><span class="line">    <span class="string">&#x27;imgsz&#x27;</span>: <span class="number">640</span>,  <span class="comment"># 输入图像的大小</span></span><br><span class="line">    <span class="string">&#x27;device&#x27;</span>: <span class="string">&#x27;cuda&#x27;</span>,  <span class="comment"># 使用 GPU 训练，如果没有 GPU 可以改为 &#x27;cpu&#x27;</span></span><br><span class="line">    <span class="string">&#x27;project&#x27;</span>: <span class="string">&#x27;runs/detect&#x27;</span>,  <span class="comment"># 存储训练结果的目录</span></span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;train3&#x27;</span>,  <span class="comment"># 训练结果保存的子目录</span></span><br><span class="line">    <span class="string">&#x27;save&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 是否保存模型</span></span><br><span class="line">    <span class="string">&#x27;save_period&#x27;</span>: -<span class="number">1</span>,  <span class="comment"># 每隔多少轮保存一次模型</span></span><br><span class="line">    <span class="string">&#x27;verbose&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 是否打印详细日志</span></span><br><span class="line">    <span class="string">&#x27;workers&#x27;</span>: <span class="number">0</span>,  <span class="comment"># 数据加载器的工作线程数</span></span><br><span class="line">    <span class="string">&#x27;optimizer&#x27;</span>: <span class="string">&#x27;AdamW&#x27;</span>,  <span class="comment"># 使用自动优化器（Adam 或 SGD）</span></span><br><span class="line">    <span class="string">&#x27;lr0&#x27;</span>: <span class="number">0.003</span>,  <span class="comment"># 初始学习率</span></span><br><span class="line">    <span class="string">&#x27;lrf&#x27;</span>: <span class="number">0.2</span>,  <span class="comment"># 学习率衰减率</span></span><br><span class="line">    <span class="string">&#x27;warmup_epochs&#x27;</span>: <span class="number">7</span>,  <span class="comment"># 预热的轮数</span></span><br><span class="line">    <span class="string">&#x27;box&#x27;</span>: <span class="number">7.5</span>,  <span class="comment"># 训练的框回归损失权重</span></span><br><span class="line">    <span class="string">&#x27;cls&#x27;</span>: <span class="number">0.5</span>,  <span class="comment"># 类别损失权重</span></span><br><span class="line">    <span class="string">&#x27;dfl&#x27;</span>: <span class="number">1.5</span>,  <span class="comment"># 关键点损失权重</span></span><br><span class="line">    <span class="string">&#x27;pose&#x27;</span>: <span class="number">12.0</span>,  <span class="comment"># 姿态估计损失权重</span></span><br><span class="line">    <span class="string">&#x27;nbs&#x27;</span>: <span class="number">64</span>,  <span class="comment"># 批次大小</span></span><br><span class="line">    <span class="string">&#x27;freeze&#x27;</span> : <span class="number">10</span>,  <span class="comment"># 冻结训练的层数</span></span><br><span class="line">    <span class="string">&#x27;split&#x27;</span>: <span class="string">&quot;0.8 0.2 &quot;</span>  <span class="comment"># 训练集和验证集的比例</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 打印训练参数</span></span><br><span class="line"><span class="built_in">print</span>(train_args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练模型</span></span><br><span class="line">train_results = model.train(**train_args)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出训练结果</span></span><br><span class="line"><span class="built_in">print</span>(train_results)</span><br></pre></td></tr></table></figure><h3 id="训练参数打印"><a href="#训练参数打印" class="headerlink" title="训练参数打印"></a>训练参数打印</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">engine\trainer: </span><br><span class="line">task=detect</span><br><span class="line">mode=train</span><br><span class="line">model=D:\Program Files\road_snow\yolov8n\yolov8m.pt</span><br><span class="line">data=yolov8m.yaml</span><br><span class="line">epochs=300</span><br><span class="line"><span class="keyword">time</span>=None</span><br><span class="line">patience=100</span><br><span class="line">batch=16</span><br><span class="line">imgsz=640</span><br><span class="line">save=True</span><br><span class="line">save_period=-1</span><br><span class="line">cache=False</span><br><span class="line">device=cuda</span><br><span class="line">workers=0</span><br><span class="line">project=runs/detect</span><br><span class="line">name=train32</span><br><span class="line">exist_ok=False</span><br><span class="line">pretrained=True</span><br><span class="line">optimizer=AdamW</span><br><span class="line">verbose=True</span><br><span class="line">seed=0</span><br><span class="line">deterministic=True</span><br><span class="line">single_cls=False</span><br><span class="line">rect=False</span><br><span class="line">cos_lr=False</span><br><span class="line">close_mosaic=10</span><br><span class="line">resume=False</span><br><span class="line">amp=True</span><br><span class="line">fraction=1.0</span><br><span class="line">profile=False</span><br><span class="line">freeze=10</span><br><span class="line">multi_scale=False</span><br><span class="line">overlap_mask=True</span><br><span class="line">mask_ratio=4</span><br><span class="line">dropout=0.0</span><br><span class="line">val=True</span><br><span class="line"><span class="built_in">split</span>=0.8 0.2</span><br><span class="line">save_json=False</span><br><span class="line">save_hybrid=False</span><br><span class="line">conf=None</span><br><span class="line">iou=0.7</span><br><span class="line">max_det=300</span><br><span class="line">half=False</span><br><span class="line">dnn=False</span><br><span class="line">plots=True</span><br><span class="line"><span class="built_in">source</span>=None</span><br><span class="line">vid_stride=1</span><br><span class="line">stream_buffer=False</span><br><span class="line">visualize=False</span><br><span class="line">augment=False</span><br><span class="line">agnostic_nms=False</span><br><span class="line">classes=None</span><br><span class="line">retina_masks=False</span><br><span class="line">embed=None</span><br><span class="line">show=False</span><br><span class="line">save_frames=False</span><br><span class="line">save_txt=False</span><br><span class="line">save_conf=False</span><br><span class="line">save_crop=False</span><br><span class="line">show_labels=True</span><br><span class="line">show_conf=True</span><br><span class="line">show_boxes=True</span><br><span class="line">line_width=None</span><br><span class="line">format=torchscript</span><br><span class="line">keras=False</span><br><span class="line">optimize=False</span><br><span class="line">int8=False</span><br><span class="line">dynamic=False</span><br><span class="line">simplify=True</span><br><span class="line">opset=None</span><br><span class="line">workspace=None</span><br><span class="line">nms=False</span><br><span class="line">lr0=0.003</span><br><span class="line">lrf=0.2</span><br><span class="line">momentum=0.937</span><br><span class="line">weight_decay=0.0005</span><br><span class="line">warmup_epochs=7</span><br><span class="line">warmup_momentum=0.8</span><br><span class="line">warmup_bias_lr=0.1</span><br><span class="line">box=7.5</span><br><span class="line">cls=0.5</span><br><span class="line">dfl=1.5</span><br><span class="line">pose=12.0</span><br><span class="line">kobj=1.0</span><br><span class="line">nbs=64</span><br><span class="line">hsv_h=0.015</span><br><span class="line">hsv_s=0.7</span><br><span class="line">hsv_v=0.4</span><br><span class="line">degrees=0.0</span><br><span class="line">translate=0.1</span><br><span class="line">scale=0.5</span><br><span class="line">shear=0.0</span><br><span class="line">perspective=0.0</span><br><span class="line">flipud=0.0</span><br><span class="line">fliplr=0.5</span><br><span class="line">bgr=0.0</span><br><span class="line">mosaic=1.0</span><br><span class="line">mixup=0.0</span><br><span class="line">copy_paste=0.0</span><br><span class="line">copy_paste_mode=flip</span><br><span class="line">auto_augment=randaugment</span><br><span class="line">erasing=0.4</span><br><span class="line">crop_fraction=1.0</span><br><span class="line">cfg=None</span><br><span class="line">tracker=botsort.yaml</span><br><span class="line">save_dir=runs\detect\train32</span><br></pre></td></tr></table></figure><h2 id="模型评估与优化"><a href="#模型评估与优化" class="headerlink" title="模型评估与优化"></a>模型评估与优化</h2><h3 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h3><p><img src="/assets/IMG_6163.jpg" alt="IMG_6163"></p><p><img src="/assets/IMG_5882.jpg" alt="IMG_5882"></p><p><img src="/assets/IMG_4644.jpg" alt="IMG_4644"></p><p><img src="/assets/IMG_0814.jpg" alt="IMG_0814"></p><p><img src="/assets/IMG_0730.jpg" alt="IMG_0730"></p><p><img src="/assets/IMG_0724.jpg" alt="IMG_0724"></p><p><img src="/assets/IMG_0666.jpg" alt="IMG_0666"></p><p><img src="/assets/IMG_0607.jpg" alt="IMG_0607"></p><p><img src="/assets/IMG_0569.jpg" alt="IMG_0569"></p><h2 id="危险评估算法设计"><a href="#危险评估算法设计" class="headerlink" title="危险评估算法设计"></a>危险评估算法设计</h2><p>日后的工作</p><h2 id="前端展示代码"><a href="#前端展示代码" class="headerlink" title="前端展示代码"></a>前端展示代码</h2><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p><code>static/css/styles.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#007bff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#0056b3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#result</span> <span class="selector-tag">img</span>, <span class="selector-id">#result</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>templates/index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/styles.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>YOLOv8 Object Detection<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>YOLOv8 Object Detection<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;upload-form&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;image/*,video/*&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Upload and Predict<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Prediction Result:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;result-image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Result will be displayed here&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 100%; display: none;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">&quot;result-video&quot;</span> <span class="attr">controls</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 100%; display: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;upload-form&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> resultImage = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;result-image&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> resultVideo = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;result-video&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">        form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="title function_">async</span> (e) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">            e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> fileInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> file = fileInput.<span class="property">files</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (!file) <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;Please select a file.&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span><br><span class="line"><span class="language-javascript">            formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, file);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/upload&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">body</span>: formData,</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`HTTP error! status: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> result = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (result.<span class="property">error</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(result.<span class="property">error</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 添加时间戳避免缓存问题</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> resultPath = <span class="string">`<span class="subst">$&#123;result.result&#125;</span>?t=<span class="subst">$&#123;timestamp&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (file.<span class="property">type</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;image/&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                    resultImage.<span class="property">src</span> = resultPath;</span></span><br><span class="line"><span class="language-javascript">                    resultImage.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    resultVideo.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    resultVideo.<span class="property">src</span> = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 清除视频源</span></span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.<span class="property">type</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;video/&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                    resultVideo.<span class="property">src</span> = resultPath;</span></span><br><span class="line"><span class="language-javascript">                    resultVideo.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    resultImage.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    resultImage.<span class="property">src</span> = <span class="string">&#x27;&#x27;</span>; <span class="comment">// 清除图片源</span></span></span><br><span class="line"><span class="language-javascript">                    resultVideo.<span class="title function_">load</span>(); <span class="comment">// 重新加载视频</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&#x27;Prediction failed: &#x27;</span> + error.<span class="property">message</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>yolov8n/app.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, send_from_directory, jsonify</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> ultralytics <span class="keyword">import</span> YOLO</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&#x27;static/uploads&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;RESULTS_FOLDER&#x27;</span>] = <span class="string">&#x27;static/results&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保文件夹存在</span></span><br><span class="line">os.makedirs(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], exist_ok=<span class="literal">True</span>)</span><br><span class="line">os.makedirs(app.config[<span class="string">&#x27;RESULTS_FOLDER&#x27;</span>], exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict_yolov8</span>(<span class="params">input_path, file</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        model = YOLO(<span class="string">r&#x27;D:\Program Files\road_snow\yolov8n\runs\detect\train310\weights\best.pt&#x27;</span>)</span><br><span class="line">        results = model.predict(</span><br><span class="line">            source=input_path,</span><br><span class="line">            project=app.config[<span class="string">&#x27;RESULTS_FOLDER&#x27;</span>],</span><br><span class="line">            name=os.path.splitext(file.filename)[<span class="number">0</span>],</span><br><span class="line">            save=<span class="literal">True</span>,</span><br><span class="line">            exist_ok=<span class="literal">True</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        result_dir = <span class="built_in">str</span>(results[<span class="number">0</span>].save_dir)</span><br><span class="line">        result_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(result_dir) <span class="keyword">if</span> f.endswith((<span class="string">&#x27;.avi&#x27;</span>, <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>))]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result_files:</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;No output file generated.&quot;</span>)</span><br><span class="line"></span><br><span class="line">        result_filename = result_files[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 确保 ffmpeg 在系统 PATH 中</span></span><br><span class="line">        <span class="keyword">if</span> result_filename.endswith(<span class="string">&#x27;.avi&#x27;</span>):</span><br><span class="line">            result_filename_mp4 = os.path.splitext(result_filename)[<span class="number">0</span>] + <span class="string">&#x27;.mp4&#x27;</span></span><br><span class="line">            avi_path = os.path.join(result_dir, result_filename)</span><br><span class="line">            mp4_path = os.path.join(result_dir, result_filename_mp4)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 调用 ffmpeg 进行转换</span></span><br><span class="line">            subprocess.run([<span class="string">&#x27;ffmpeg&#x27;</span>, <span class="string">&#x27;-i&#x27;</span>, avi_path, <span class="string">&#x27;-vcodec&#x27;</span>, <span class="string">&#x27;libx264&#x27;</span>, <span class="string">&#x27;-crf&#x27;</span>, <span class="string">&#x27;23&#x27;</span>, <span class="string">&#x27;-preset&#x27;</span>, <span class="string">&#x27;fast&#x27;</span>, mp4_path], check=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            os.remove(avi_path)  <span class="comment"># 删除原 .avi 文件</span></span><br><span class="line">            result_filename = result_filename_mp4</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Result saved to: <span class="subst">&#123;result_dir&#125;</span>\\<span class="subst">&#123;result_filename&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;/static/results/<span class="subst">&#123;os.path.basename(result_dir)&#125;</span>/<span class="subst">&#123;result_filename&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error in predict_yolov8: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;No file uploaded&#x27;</span>&#125;), <span class="number">400</span></span><br><span class="line"></span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;No selected file&#x27;</span>&#125;), <span class="number">400</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 安全处理文件名</span></span><br><span class="line">    filename = secure_filename(file.filename)</span><br><span class="line">    input_path = os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        file.save(input_path)</span><br><span class="line">        result_url = predict_yolov8(input_path, file)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result_url:</span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="string">&#x27;Prediction failed&#x27;</span>&#125;), <span class="number">500</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;result&#x27;</span>: result_url&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error in upload_file: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;error&#x27;</span>: <span class="built_in">str</span>(e)&#125;), <span class="number">500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/static/&lt;path:path&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">serve_static</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(<span class="string">&#x27;static&#x27;</span>, path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python app.py</span><br></pre></td></tr></table></figure><p>即可在<code>http://127.0.0.1:5000/</code>与前端交互</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> Yolo </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
